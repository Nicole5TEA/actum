name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
      - feature/respuestas
      - feature/niveles
      - ajustes_finales
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
      - feature/respuestas
      - feature/niveles
      - ajustes_finales

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Paso A: instala tu front y haz el build
      - name: Install and build
        run: |
          npm ci
          npm run build

      # Paso B: fuerza la copia del config a dist
      - name: Copy SWA config into dist
        run: |
          cp public/staticwebapp.config.json dist/staticwebapp.config.json

      # Paso C: despliega usando dist como artifact
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GENTLE_MUD_0F32BF703 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/"
          api_location: "api"
          app_artifact_location: "dist"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GENTLE_MUD_0F32BF703 }}
          action: "close"
